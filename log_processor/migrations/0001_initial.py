# Generated by Django 3.2 on 2024-07-25 05:04

import collections.abc
import django.core.serializers.json
from django.db import migrations, models
import django_pydantic_field.compat.django
import django_pydantic_field.fields
import log_processor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataTransferRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_number', models.CharField(max_length=64)),
                ('vendor_id', models.CharField(max_length=255)),
                ('message_id', models.CharField(blank=True, max_length=50)),
                ('data', models.TextField(blank=True)),
                ('raw_data', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampledMeterValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_number', models.CharField(max_length=64)),
                ('connector_id', models.IntegerField()),
                ('transaction_id', models.IntegerField()),
                ('L1', django_pydantic_field.fields.PydanticSchemaField(config=None, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(collections.abc.Sequence, (log_processor.models.SampledValue,)))),
                ('L2', django_pydantic_field.fields.PydanticSchemaField(config=None, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(collections.abc.Sequence, (log_processor.models.SampledValue,)))),
                ('L3', django_pydantic_field.fields.PydanticSchemaField(config=None, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(collections.abc.Sequence, (log_processor.models.SampledValue,)))),
                ('raw_data', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
