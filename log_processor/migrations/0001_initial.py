# Generated by Django 3.2 on 2024-07-18 16:00

from django.db import migrations, models
import log_processor.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataTransferRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_number', models.CharField(max_length=64)),
                ('vendor_id', models.CharField(max_length=255)),
                ('message_id', models.CharField(blank=True, max_length=50)),
                ('data', models.TextField(blank=True)),
                ('raw_data', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampledMeterValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_number', models.CharField(max_length=64)),
                ('timestamp', models.DateTimeField()),
                ('connector_id', models.IntegerField()),
                ('transaction_id', models.IntegerField()),
                ('value', models.CharField(help_text='Value as a "Raw" (decimal) number or "SignedData"', max_length=255, validators=[log_processor.validators.decimal_or_signed_data])),
                ('context', models.CharField(blank=True, choices=[('Interruption.Begin', 'Interruption Begin'), ('Interruption.End', 'Interruption End'), ('Other', 'Other'), ('Sample.Clock', 'Sample Clock'), ('Sample.Periodic', 'Sample Periodic'), ('Transaction.Begin', 'Transaction Begin'), ('Transaction.End', 'Transaction End'), ('Trigger', 'Trigger')], default='Sample.Periodic', max_length=32)),
                ('format', models.CharField(blank=True, choices=[('Raw', 'Raw'), ('SignedData', 'Signeddata')], default='Raw', max_length=16)),
                ('measurand', models.CharField(blank=True, choices=[('Current.Export', 'Current Export'), ('Current.Import', 'Current Import'), ('Current.Offered', 'Current Offered'), ('Energy.Active.Export.Register', 'Energy Active Export Register'), ('Energy.Active.Import.Register', 'Energy Active Import Register'), ('Energy.Reactive.Export.Register', 'Energy Reactive Export Register'), ('Energy.Reactive.Import.Register', 'Energy Reactive Import Register'), ('Energy.Active.Export.Interval', 'Energy Active Export Interval'), ('Energy.Active.Import.Interval', 'Energy Active Import Interval'), ('Energy.Reactive.Export.Interval', 'Energy Reactive Export Interval'), ('Energy.Reactive.Import.Interval', 'Energy Reactive Import Interval'), ('Frequency', 'Frequency'), ('Power.Active.Export', 'Power Active Export'), ('Power.Active.Import', 'Power Active Import'), ('Power.Factor', 'Power Factor'), ('Power.Offered', 'Power Offered'), ('Power.Reactive.Export', 'Power Reactive Export'), ('Power.Reactive.Import', 'Power Reactive Import'), ('RPM', 'Rpm'), ('SoC', 'Soc'), ('Temperature', 'Temperature'), ('Voltage', 'Voltage')], default='Energy.Active.Export.Register', max_length=32)),
                ('phase', models.CharField(blank=True, choices=[('L1', 'L1'), ('L2', 'L2'), ('L3', 'L3'), ('N', 'N'), ('L1-N', 'L1 N'), ('L2-N', 'L2 N'), ('L3-N', 'L3 N'), ('L1-L2', 'L1 L2'), ('L2-L3', 'L2 L3'), ('L3-L1', 'L3 L1')], max_length=8)),
                ('location', models.CharField(blank=True, choices=[('Body', 'Body'), ('Cable', 'Cable'), ('EV', 'Ev'), ('Inlet', 'Inlet'), ('Outlet', 'Outlet')], default='Outlet', max_length=8)),
                ('unit', models.CharField(blank=True, choices=[('Wh', 'Wh'), ('kWh', 'Kwh'), ('varh', 'Varh'), ('kvarh', 'Kvarh'), ('W', 'W'), ('kW', 'Kw'), ('VA', 'Va'), ('kVA', 'Kva'), ('var', 'Var'), ('kvar', 'Kvar'), ('A', 'A'), ('V', 'V'), ('Celsius', 'Celsius'), ('Fahrenheit', 'Fahrenheit'), ('K', 'K'), ('Percent', 'Percent')], default='Wh', max_length=16)),
                ('raw_data', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
